# =============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains production-specific overrides for application.properties

# =============================================================================
# DATABASE CONFIGURATION - PRODUCTION
# =============================================================================
# Production database settings (use environment variables)
spring.datasource.url=jdbc:postgresql://prod-db-host:5432/Pulserise_db
spring.datasource.username=Pulserise_db
spring.datasource.password=1234

# JPA settings for production
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=false

# Connection pool for production
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10

# =============================================================================
# SECURITY CONFIGURATION - PRODUCTION
# =============================================================================
# Strong JWT secret (must be set via environment variable)
app.jwt.secret= ${JWT_SECRET:pulseriseSecretKeyForProduction}
app.jwt.expirationMs=86400000
app.jwt.refreshExpirationMs=604800000
# Password encoding strength
spring.security.password.strength=12

# Disable security debug
spring.security.debug=false

# =============================================================================
# CORS CONFIGURATION - PRODUCTION
# =============================================================================
# Restrict CORS to production domains only
app.cors.allowedOrigins=${ALLOWED_ORIGINS:https://www.pulserise.com,https://api.pulserise.com}
app.cors.allowedMethods=GET,POST,PUT,DELETE,OPTIONS,PATCH
app.cors.allowedHeaders=*
app.cors.allowCredentials=true
app.cors.maxAge=3600


# =============================================================================
# LOGGING CONFIGURATION - PRODUCTION
# =============================================================================
# Production logging levels
logging.level.com.pulserise.pulserisebackend=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Log to file in production
logging.file.name=logs/pulserise-backend.log
logging.file.max-size=10MB
logging.file.max-history=30

# =============================================================================
# GROQ AI CONFIGURATION - PRODUCTION
# =============================================================================
# Production AI settings
groq.api.key=${GROQ_API_KEY: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}
groq.api.model=llama3-8b-8192
groq.api.url=https://api.groq.com/openai/v1/chat/completions
groq.api.maxTokens=1000
groq.api.timeout=30
groq.api.temperature=0.7

# =============================================================================
# EMAIL CONFIGURATION - PRODUCTION
# =============================================================================
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}

# =============================================================================
# ACTUATOR - PRODUCTION
# =============================================================================
# Restrict actuator endpoints in production
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never

# =============================================================================
# DEVELOPMENT TOOLS - PRODUCTION
# =============================================================================
# Disable development tools in production
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# =============================================================================
# SSL/TLS CONFIGURATION - PRODUCTION
# =============================================================================
# Enable HTTPS in production (uncomment when SSL certificate is available)
# server.ssl.enabled=true
# server.ssl.key-store=${SSL_KEYSTORE_PATH}
# server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
# server.ssl.key-store-type=PKCS12